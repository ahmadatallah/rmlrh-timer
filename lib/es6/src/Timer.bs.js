// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Button$ReactHooksTemplate from "./Button.bs.js";

function Timer(Props) {
  var match = React.useReducer((function (state, action) {
          switch (action) {
            case 0 : 
                return /* record */[
                        /* seconds */state[/* seconds */0],
                        /* isTicking */true
                      ];
            case 1 : 
                return /* record */[
                        /* seconds */state[/* seconds */0],
                        /* isTicking */false
                      ];
            case 2 : 
                return /* record */[
                        /* seconds */30,
                        /* isTicking */state[/* isTicking */1]
                      ];
            case 3 : 
                var match = state[/* isTicking */1] && state[/* seconds */0] > 0;
                if (match) {
                  return /* record */[
                          /* seconds */state[/* seconds */0] - 1 | 0,
                          /* isTicking */state[/* isTicking */1]
                        ];
                } else {
                  return state;
                }
            
          }
        }), /* record */[
        /* seconds */30,
        /* isTicking */false
      ]);
  var dispatch = match[1];
  var state = match[0];
  var dispatchStart = function (_event) {
    return Curry._1(dispatch, /* Start */0);
  };
  var dispatchStop = function (_event) {
    return Curry._1(dispatch, /* Stop */1);
  };
  var dispatchReset = function (_event) {
    return Curry._1(dispatch, /* Reset */2);
  };
  React.useEffect((function () {
          var timer = setInterval((function (param) {
                  return Curry._1(dispatch, /* Tick */3);
                }), 1000);
          return (function (param) {
                    clearInterval(timer);
                    return /* () */0;
                  });
        }));
  var match$1 = state[/* isTicking */1];
  return React.createElement("div", undefined, "Timer: " + String(state[/* seconds */0]), match$1 ? React.createElement(Button$ReactHooksTemplate.make, {
                    onClick: dispatchStop,
                    title: "STOP",
                    children: "Stop",
                    category: /* PRIMARY */1
                  }) : React.createElement(React.Fragment, undefined, React.createElement(Button$ReactHooksTemplate.make, {
                        onClick: dispatchStart,
                        title: "START",
                        children: "Start",
                        category: /* SECONDARY */0
                      }), React.createElement(Button$ReactHooksTemplate.make, {
                        onClick: dispatchReset,
                        title: "RESET",
                        children: "Reset",
                        category: /* SECONDARY */0
                      })));
}

var make = Timer;

export {
  make ,
  
}
/* react Not a pure module */
